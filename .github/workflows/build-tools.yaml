name: Build

on:
  - push
  - pull_request

permissions: read-all

jobs:
  run-super-linter:
    name: Run GitHub Super Linter
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      statuses: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Lint Code Base
        uses: super-linter/super-linter@v7
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JAVASCRIPT_DEFAULT_STYLE: prettier
          VALIDATE_JAVASCRIPT_STANDARD: "false"
          VALIDATE_PYTHON_PYLINT: "false"

  run-vulnerability-analysis:
    name: Run Vulnerability Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.32.0
        with:
          scan-type: fs
          vuln-type: library
          exit-code: 1
          format: sarif
          output: trivy-results.sarif
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-results.sarif

  test-docker-images:
    name: Test Docker Images
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13.5"
      - name: Set up Docker
        uses: docker/setup-docker-action@v4
      - name: Setup pipx
        run: |
          sudo apt update
          sudo apt install pipx
          pipx ensurepath
      - name: Setup Poetry
        run: pipx install poetry
      - name: Install Test Dependencies
        run: poetry sync
      - name: Validate Types in Tests
        run: poetry run mypy .
      - name: Run Tests
        run: poetry run pytest

  build-tools:
    name: Build Tools
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs:
      - run-super-linter
      - run-vulnerability-analysis
      - test-docker-images
    strategy:
      matrix:
        tool:
          - "request-debugger"
          - "debug-container"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Login to the Container registry
        uses: docker/login-action@v3
        with:
          username: nadunrds
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build Docker Image for scanning
        uses: docker/build-push-action@v6
        with:
          context: ./components/${{ matrix.tool }}
          load: true
          tags: nadunrds/debug-tools-${{ matrix.tool }}:latest
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: nadunrds/debug-tools-${{ matrix.tool }}:latest
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
      - name: Build & Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ./components/${{ matrix.tool }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: nadunrds/debug-tools-${{ matrix.tool }}:latest
